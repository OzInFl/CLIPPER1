// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.3.0
// LVGL version: 8.3.4
// Project name: Clipper1

#ifndef _CLIPPER1_UI_H
#define _CLIPPER1_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#include "lvgl.h"

#include "ui_helpers.h"
#include "ui_events.h"
// SCREEN: ui_scrSplash
void ui_scrSplash_screen_init(void);
void ui_event_scrSplash(lv_event_t * e);
extern lv_obj_t * ui_scrSplash;
extern lv_obj_t * ui_lblSplash;
extern lv_obj_t * ui_Label2;
extern lv_obj_t * ui_Label4;
extern lv_obj_t * ui_lblTitle;
// SCREEN: ui_scrMain
void ui_scrMain_screen_init(void);
extern lv_obj_t * ui_scrMain;
void ui_event_btnMainConfig(lv_event_t * e);
extern lv_obj_t * ui_btnMainConfig;
void ui_event_btn315Test(lv_event_t * e);
extern lv_obj_t * ui_btn315Test;
void ui_event_btnMainPreset(lv_event_t * e);
extern lv_obj_t * ui_btnMainPreset;
void ui_event_btnMain9(lv_event_t * e);
extern lv_obj_t * ui_btnMain9;
void ui_event_btnMainPresetTX(lv_event_t * e);
extern lv_obj_t * ui_btnMainPresetTX;
void ui_event_btnMainTesla(lv_event_t * e);
extern lv_obj_t * ui_btnMainTesla;
void ui_event_btnMainSettings(lv_event_t * e);
extern lv_obj_t * ui_btnMainSettings;
void ui_event_btnMainWifi(lv_event_t * e);
extern lv_obj_t * ui_btnMainWifi;
void ui_event_btnMainProtAna(lv_event_t * e);
extern lv_obj_t * ui_btnMainProtAna;
extern lv_obj_t * ui_lblMainConfig;
extern lv_obj_t * ui_lblMain315Test;
extern lv_obj_t * ui_lblMainProtAna;
extern lv_obj_t * ui_lblMainPresetTx;
extern lv_obj_t * ui_lblMainStatus;
extern lv_obj_t * ui_lblMainSettings;
extern lv_obj_t * ui_lblMainMenu;
extern lv_obj_t * ui_Image2;
extern lv_obj_t * ui_Image1;
extern lv_obj_t * ui_Image3;
extern lv_obj_t * ui_Image4;
extern lv_obj_t * ui_lblProtAnalyzerTitle2;
// SCREEN: ui_scrProtAna
void ui_scrProtAna_screen_init(void);
extern lv_obj_t * ui_scrProtAna;
extern lv_obj_t * ui_lblProtAnalyzerTitle;
extern lv_obj_t * ui_txtProtAnaResults;
void ui_event_btnProtAnaCncl(lv_event_t * e);
extern lv_obj_t * ui_btnProtAnaCncl;
void ui_event_btnProtAnaClear(lv_event_t * e);
extern lv_obj_t * ui_btnProtAnaClear;
extern lv_obj_t * ui_lblProtAnaCncl;
void ui_event_swtProtAnaRxEn(lv_event_t * e);
extern lv_obj_t * ui_swtProtAnaRxEn;
extern lv_obj_t * ui_lblProtAnaRXEn;
extern lv_obj_t * ui_lblProtAnaClear;
extern lv_obj_t * ui_lblMainFreq;
void ui_event_txtMainFreq(lv_event_t * e);
extern lv_obj_t * ui_txtMainFreq;
extern lv_obj_t * ui_lblProtAnaReceived;
extern lv_obj_t * ui_lblProtAnaBitLength;
extern lv_obj_t * ui_txtProtAnaReceived;
extern lv_obj_t * ui_txtProtAnaBitLength;
extern lv_obj_t * ui_lblProtAnaProtocol;
extern lv_obj_t * ui_txtProtAnaProtocol;
extern lv_obj_t * ui_lblProtAnaDBPTD;
extern lv_obj_t * ui_txtProtAnaDBPTD;
extern lv_obj_t * ui_lblProtAnaPropProt;
extern lv_obj_t * ui_txtProtAnaProtAnaPropProt;
// SCREEN: ui_scrKybdNum
void ui_scrKybdNum_screen_init(void);
extern lv_obj_t * ui_scrKybdNum;
void ui_event_btnKybdOK(lv_event_t * e);
extern lv_obj_t * ui_btnKybdOK;
void ui_event_btnKybdCncl(lv_event_t * e);
extern lv_obj_t * ui_btnKybdCncl;
extern lv_obj_t * ui_txtKybdFreq;
extern lv_obj_t * ui_lblKybdTitle;
extern lv_obj_t * ui_lblKybdValueUnits;
extern lv_obj_t * ui_lblKybdCancel;
extern lv_obj_t * ui_lblKybdOk;
void ui_event_KybdNumeric(lv_event_t * e);
extern lv_obj_t * ui_KybdNumeric;
// SCREEN: ui_scrPresets
void ui_scrPresets_screen_init(void);
extern lv_obj_t * ui_scrPresets;
extern lv_obj_t * ui_lblPresetsTitle;
extern lv_obj_t * ui_lblPresetsFolder;
extern lv_obj_t * ui_lblPresetsFile;
void ui_event_btnPresetsOk(lv_event_t * e);
extern lv_obj_t * ui_btnPresetsOk;
void ui_event_btnPresetsCncl(lv_event_t * e);
extern lv_obj_t * ui_btnPresetsCncl;
extern lv_obj_t * ui_lblPresetsCncl;
extern lv_obj_t * ui_lblPresetsOk;
extern lv_obj_t * ui_lblPresetsStatus;
void ui_event_ddPresetsFolder(lv_event_t * e);
extern lv_obj_t * ui_ddPresetsFolder;
void ui_event_ddPresetsFile(lv_event_t * e);
extern lv_obj_t * ui_ddPresetsFile;
void ui_event_btnPresetTx(lv_event_t * e);
extern lv_obj_t * ui_btnPresetTx;
extern lv_obj_t * ui_lblPresetTx;
// SCREEN: ui_scrSettings
void ui_scrSettings_screen_init(void);
extern lv_obj_t * ui_scrSettings;
extern lv_obj_t * ui_lblSettingsTitle;
void ui_event_btnSettingsOTA(lv_event_t * e);
extern lv_obj_t * ui_btnSettingsOTA;
extern lv_obj_t * ui_lblSettingsOTA;
extern lv_obj_t * ui_lblSettingsStatus;
void ui_event_btnSettingsBack(lv_event_t * e);
extern lv_obj_t * ui_btnSettingsBack;
extern lv_obj_t * ui_lblSettingsBack;
extern lv_obj_t * ui_lblSettingsWifiIP;
extern lv_obj_t * ui_lblSettingsIPAddr;
extern lv_obj_t * ui_lblSettingsInfo;
extern lv_obj_t * ui_barProgress;
extern lv_obj_t * ui_swSettingsWifiMode;
extern lv_obj_t * ui_lblSettingsWifiSSID;
extern lv_obj_t * ui_txtSettingsWifiSSID;
extern lv_obj_t * ui_lblSettingsWifiKey;
extern lv_obj_t * ui_txtSettingsWifiKey;
extern lv_obj_t * ui_lblSettingsWifiMode;
extern lv_obj_t * ui_lblSettingsWifiModeAP;
extern lv_obj_t * ui_lblSettingsWifiModeSTA;
void ui_event_btnSettingsOTA1(lv_event_t * e);
extern lv_obj_t * ui_btnSettingsOTA1;
extern lv_obj_t * ui_lblSettingsSave;
// SCREEN: ui_scrWifiApps
void ui_scrWifiApps_screen_init(void);
extern lv_obj_t * ui_scrWifiApps;
extern lv_obj_t * ui_imgWifiBtns;
extern lv_obj_t * ui_lblWifiMain;
void ui_event_btnWifiBackToMain(lv_event_t * e);
extern lv_obj_t * ui_btnWifiBackToMain;
extern lv_obj_t * ui_Label7;
void ui_event_btnWifiScanner(lv_event_t * e);
extern lv_obj_t * ui_btnWifiScanner;
extern lv_obj_t * ui_lblWifiScanner;
// SCREEN: ui_scrConfig
void ui_scrConfig_screen_init(void);
extern lv_obj_t * ui_scrConfig;
extern lv_obj_t * ui_Label6;
extern lv_obj_t * ui_ddlConfigModule;
extern lv_obj_t * ui_Label5;
extern lv_obj_t * ui_ddlConfigModulation;
extern lv_obj_t * ui_Label8;
void ui_event_txtConfigTransmissions(lv_event_t * e);
extern lv_obj_t * ui_txtConfigTransmissions;
extern lv_obj_t * ui_Label9;
void ui_event_txtConfigFrequency(lv_event_t * e);
extern lv_obj_t * ui_txtConfigFrequency;
extern lv_obj_t * ui_Label10;
void ui_event_txtConfigRawData(lv_event_t * e);
extern lv_obj_t * ui_txtConfigRawData;
extern lv_obj_t * ui_Label11;
void ui_event_txtConfigDeviation(lv_event_t * e);
extern lv_obj_t * ui_txtConfigDeviation;
void ui_event_btnConfigTX(lv_event_t * e);
extern lv_obj_t * ui_btnConfigTX;
extern lv_obj_t * ui_lblConfigTX;
extern lv_obj_t * ui_lblWifiMain2;
void ui_event_btnConfigBack(lv_event_t * e);
extern lv_obj_t * ui_btnConfigBack;
extern lv_obj_t * ui_lblConfigBack;
// SCREEN: ui_scrKybdAlpha
void ui_scrKybdAlpha_screen_init(void);
extern lv_obj_t * ui_scrKybdAlpha;
void ui_event_btnKybdOK1(lv_event_t * e);
extern lv_obj_t * ui_btnKybdOK1;
void ui_event_btnKybdCncl1(lv_event_t * e);
extern lv_obj_t * ui_btnKybdCncl1;
extern lv_obj_t * ui_txtKybdAlphaValue;
extern lv_obj_t * ui_lblKybdAlphaTitle;
extern lv_obj_t * ui_lblKybdAlphaInfo;
extern lv_obj_t * ui_lblKybdCancel1;
extern lv_obj_t * ui_lblKybdOk1;
extern lv_obj_t * ui_Keyboard1;
// SCREEN: ui_scrWifiScanner
void ui_scrWifiScanner_screen_init(void);
extern lv_obj_t * ui_scrWifiScanner;
extern lv_obj_t * ui_lblWifiScan;
void ui_event_btnWifiScannerScan(lv_event_t * e);
extern lv_obj_t * ui_btnWifiScannerScan;
void ui_event_btnWiFiScannerBack(lv_event_t * e);
extern lv_obj_t * ui_btnWiFiScannerBack;
extern lv_obj_t * ui_Label3;
extern lv_obj_t * ui_lblWifiScannerScan;
extern lv_obj_t * ui_txtWifiScanNetsFound;
extern lv_obj_t * ui_lblWifiScanNetsFound;
extern lv_obj_t * ui_ddlWifiSSID;
extern lv_obj_t * ui____initial_actions0;

LV_IMG_DECLARE(ui_img_splashbkgnd2_png);    // assets\SplashBkgnd2.png
LV_IMG_DECLARE(ui_img_mainbackground_png);    // assets\MainBackground.png
LV_IMG_DECLARE(ui_img_teslabtnicon_png);    // assets\TeslaBtnIcon.png
LV_IMG_DECLARE(ui_img_wifilogo_png);    // assets\WifiLogo.png
LV_IMG_DECLARE(ui_img_analyzericon_png);    // assets\AnalyzerIcon.png
LV_IMG_DECLARE(ui_img_subrecordplay_png);    // assets\SubRecordPlay.png
LV_IMG_DECLARE(ui_img_flippericon_png);    // assets\FlipperIcon.png
LV_IMG_DECLARE(ui_img_blankpgbkgnd_png);    // assets\BlankPgBkgnd.png

LV_FONT_DECLARE(ui_font_LCD20at8BPP);
LV_FONT_DECLARE(ui_font_LCD22at8BPP);
LV_FONT_DECLARE(ui_font_LCD24at8BPP);
LV_FONT_DECLARE(ui_font_LCD30at8BPP);
LV_FONT_DECLARE(ui_font_Verdana11);
LV_FONT_DECLARE(ui_font_Verdana12);
LV_FONT_DECLARE(ui_font_Verdana14);
LV_FONT_DECLARE(ui_font_Verdana16);
LV_FONT_DECLARE(ui_font_Verdana18);
LV_FONT_DECLARE(ui_font_Verdana24);
LV_FONT_DECLARE(ui_font_Verdana8);

void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
